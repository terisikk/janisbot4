name: Continuous Delivery

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  TELEGRAM_API_DEV_ID: ${{ secrets.TELEGRAM_API_DEV_ID }}
  TELEGRAM_API_DEV_HASH: ${{ secrets.TELEGRAM_API_DEV_HASH }}
  TELEGRAM_CLIENT_SESSION: ${{ secrets.TELEGRAM_CLIENT_SESSION }}
  TELEGRAM_TEST_DC_IP: ${{ secrets.TELEGRAM_TEST_DC_IP }}
  TELEGRAM_TEST_DC_NUMBER: ${{ vars.TELEGRAM_TEST_DC_NUMBER }}
  TELEGRAM_API_TOKEN: ${{ secrets.TELEGRAM_API_TOKEN }}
  QUOTE_API_TOKEN: ${{ secrets.QUOTE_API_TOKEN }}
  QUOTE_API_URL: ${{ secrets.QUOTE_API_URL }}
  LORREM_API_URL: ${{ secrets.LORREM_API_URL }}
  LORREM_API_TOKEN: ${{ secrets.LORREM_API_TOKEN }}
  CHAT_IDS: ${{ secrets.CHAT_IDS }}
  USER_IDS: ${{ secrets.USER_IDS }}
  MODE: ${{ vars.MODE }}

jobs:
  build:
    name: "Install and cache requirements"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install poetry==1.7.1
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      - run: poetry install && poetry build

  unit-test:
    name: "Run unit tests with coverage"
    needs:
      - build
    runs-on: ubuntu-latest
    environment: Continuous Delivery
    env:
      JANISBOT_CONFIG: ${{ github.workspace }}/conf/default.conf
    steps:
      - uses: actions/checkout@v4
      - run: pipx install poetry==1.7.1
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      - run: poetry install
      - run: make test

  static-analysis:
    name: "Static analysis with ruff"
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install poetry==1.7.1
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      - run: poetry install
      - run: make lint

  # End-to-end tests are disabled because for some reason the bot hangs indefinitely
  # on when trying to connect to the Telegram test DC. 
  # I've tried to connect to the test server with my own account
  # to check the situation, but am unable to, so the issue might be on the server side.
  # Debugging locally could help. 

  # end-to-end:
  #   name: "End to end tests"
  #   if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
  #   needs:
  #     - build
  #     - unit-test
  #     - static-analysis
  #   runs-on: ubuntu-latest
  #   environment: Continuous Delivery
  #   steps:
  #   - uses: actions/checkout@v4
  #   - run: pipx install poetry==1.7.1
  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.11'
  #       cache: 'poetry'
  #   - run: poetry install
  #   - run: poetry run pytest tests/e2e/

  build-and-publish:
    runs-on: ubuntu-latest
    name: "Docker image build & publish"
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    permissions:
      packages: write
    needs:
      - build
      - unit-test
      - static-analysis
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v2
        with:
          # without scheme
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          cache-from: type=registry,ref=ghcr.io/terisikk/janisbot4:latest
          cache-to: type=inline
          tags: ghcr.io/terisikk/janisbot4:latest
